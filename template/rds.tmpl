
variable "cluster_name" {}
variable "cluster_state_bucket" {}

module "{{ .rdsModuleName }}" {
  source               = "github.com/ministryofjustice/cloud-platform-terraform-rds-instance?ref=5.6"
  cluster_name         = var.cluster_name
  cluster_state_bucket = var.cluster_state_bucket
  team_name            = "{{ .TeamName }}"
  business-unit        = "{{ .BusinessUnit }}"
  application          = "{{ .Application }}"
  is-production        = "{{ .IsProduction }}"

  # If the rds_name is not specified a random name will be generated ( cp-* )
  # Changing the RDS name requires the RDS to be re-created (destroy + create)
  # rds_name             = "my-rds-name" 

  # enable performance insights
  performance_insights_enabled = true

  # change the postgres version as you see fit.
  db_engine_version      = "10"
  environment-name       = "{{ .EnvironmentName }}"
  infrastructure-support = "{{ .InfrastructureSupport }}"

  # rds_family should be one of: postgres9.4, postgres9.5, postgres9.6, postgres10, postgres11
  # Pick the one that defines the postgres version the best
  rds_family = "postgres10"

  # Some engines can't apply some parameters without a reboot(ex postgres9.x cant apply force_ssl immediate). 
  # You will need to specify "pending-reboot" here, as default is set to "immediate".
  # db_parameter = [
  #   {
  #     name         = "rds.force_ssl"
  #     value        = "0"
  #     apply_method = "pending-reboot"
  #   }
  # ]

  # use "allow_major_version_upgrade" when upgrading the major version of an engine
  allow_major_version_upgrade = "true"

  providers = {
    # Can be either "aws.london" or "aws.ireland"
    aws = aws.london
  }
}

resource "kubernetes_secret" "rds" {
  metadata {
    name      = "{{ .rdsModuleName }}-instance-output"
    namespace = "{{ .Namespace }}"
  }

  data = {
    rds_instance_endpoint = module.{{ .rdsModuleName }}.rds_instance_endpoint
    database_name         = module.{{ .rdsModuleName }}.database_name
    database_username     = module.{{ .rdsModuleName }}.database_username
    database_password     = module.{{ .rdsModuleName }}.database_password
    rds_instance_address  = module.{{ .rdsModuleName }}.rds_instance_address
    access_key_id         = module.{{ .rdsModuleName }}.access_key_id
    secret_access_key     = module.{{ .rdsModuleName }}.secret_access_key
  }
  /* You can replace all of the above with the following, if you prefer to
     * use a single database URL value in your application code:
     *
     * url = "postgres://${module.{{ .rdsModuleName }}.database_username}:${module.{{ .rdsModuleName }}.database_password}@${module.{{ .rdsModuleName }}.rds_instance_endpoint}/${module.{{ .rdsModuleName }}.database_name}"
     *
     */
}

